#undef UNICODE

#define WIN32_LEAN_AND_MEAN

#include <windows.h>
#include <winsock2.h>
#include <ws2tcpip.h>
#include <stdlib.h>
#include <stdio.h>

// Need to link with Ws2_32.lib
#pragma comment (lib, "Ws2_32.lib")
// #pragma comment (lib, "Mswsock.lib"
#define PROTOPORT 5193 // default protocol port number
#define QLEN 6 // size of request queue

void ErrorHandler(char *errorMessage) {
     printf(errorMessage);
}
void ClearWinSock() {

    WSACleanup();

}

int main(int argc, char *argv[]) {
    int port;
    if (argc > 1) {
       port = atoi(argv[1]); // if argument specified convert argument to binary
    }
    else
        port = PROTOPORT; // use default port number
    if (port < 0) {
       printf("bad port number %s \n", argv[1]);
       return 0;
    }
    

    WSADATA wsaData;
    int iResult = WSAStartup(MAKEWORD(2,2), &wsaData);
    
    if (iResult != 0) {
        ErrorHandler("Error at WSAStartup()\n");
        return 0;
    }

    
    // CREAZIONE DELLA SOCKET
    int MySocket;
    MySocket = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (MySocket < 0) {
        ErrorHandler("socket creation failed.\n");
        ClearWinSock();
        return 0;
    }
    // ASSEGNAZIONE DI UN INDIRIZZO ALLA SOCKET
    struct sockaddr_in sad;
    memset(&sad, 0, sizeof(sad)); // ensures that extra bytes contain 0
    sad.sin_family = AF_INET;
    sad.sin_addr.s_addr = inet_addr("127.0.0.1");
    sad.sin_port = htons(port); /* converts values between the host and
    network byte order Specifically network byte order. Specifically, htons() converts 16 () converts 16-bit quantities bit quantities
    from host byte order to network byte order. */
    if (bind(MySocket, (struct sockaddr*) &sad, sizeof(sad)) < 0) {
        ErrorHandler("bind() failed.\n");
        closesocket(MySocket);
        ClearWinSock();
        return 0;
    }
}
